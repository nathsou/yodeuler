
module Solution(clk: clock, rst: bool) -> (is_ready: bool, q: uint<25>) {
    const Sum = 1000
    let a = Reg<uint<$clog2(Sum)>>(clk, rst)
    let b = Reg<uint<$clog2(Sum)>>(clk, rst)
    let complement = Sum - a.q
    let c = complement - b.q
    is_ready = a.q * a.q + b.q * b.q == c * c
    q = a.q * b.q * c

    if not is_ready {
        if a.q == 0 {
            a.d = 1
        } else if b.q == complement - 1 {
            a.d = a.q + 1
            b.d = 1
        } else {
            b.d = b.q + 1
        }
    }
}
